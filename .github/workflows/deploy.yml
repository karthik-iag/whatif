name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Snyk analysis
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
          command: monitor
        continue-on-error: true
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Build
        run: >-
          yarn

          NODE_ENV="dev" npx parcel build src/multienv-app/index.html --public-url ./ --dist-dir dist/dev

          NODE_ENV="tst" npx parcel build src/multienv-app/index.html --public-url ./ --dist-dir dist/tst

          NODE_ENV="stub" npx parcel build src/multienv-app/index.html --public-url ./ --dist-dir dist/stub

          NODE_ENV="sit" npx parcel build src/multienv-app/index.html --public-url ./ --dist-dir dist/sit

          NODE_ENV="perf" npx parcel build src/multienv-app/index.html --public-url ./ --dist-dir dist/perf

          npx cdk synth
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset10:
    name: Publish Assets Assets-FileAsset10
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset10
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset10-step.sh
  Assets-FileAsset11:
    name: Publish Assets Assets-FileAsset11
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset11
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset11-step.sh
  Assets-FileAsset12:
    name: Publish Assets Assets-FileAsset12
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset12
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset12-step.sh
  Assets-FileAsset13:
    name: Publish Assets Assets-FileAsset13
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset13
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset13-step.sh
  Assets-FileAsset14:
    name: Publish Assets Assets-FileAsset14
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset14
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset14-step.sh
  Assets-FileAsset15:
    name: Publish Assets Assets-FileAsset15
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset15
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset15-step.sh
  Assets-FileAsset16:
    name: Publish Assets Assets-FileAsset16
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset16
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset16-step.sh
  Assets-FileAsset17:
    name: Publish Assets Assets-FileAsset17
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset17
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset17-step.sh
  Assets-FileAsset18:
    name: Publish Assets Assets-FileAsset18
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset18
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset18-step.sh
  Assets-FileAsset19:
    name: Publish Assets Assets-FileAsset19
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset19
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset19-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset2-step.sh
  Assets-FileAsset20:
    name: Publish Assets Assets-FileAsset20
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset20
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset20-step.sh
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset3
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset3-step.sh
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset4
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset4-step.sh
  Assets-FileAsset5:
    name: Publish Assets Assets-FileAsset5
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset5
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset5-step.sh
  Assets-FileAsset6:
    name: Publish Assets Assets-FileAsset6
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset6
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset6-step.sh
  Assets-FileAsset7:
    name: Publish Assets Assets-FileAsset7
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset7
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset7-step.sh
  Assets-FileAsset8:
    name: Publish Assets Assets-FileAsset8
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset8
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset8-step.sh
  Assets-FileAsset9:
    name: Publish Assets Assets-FileAsset9
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on:
      - self-hosted
      - vm:m5.large
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - id: Publish
        name: Publish Assets-FileAsset9
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset9-step.sh
  Dev-MultienvApiStack-Deploy:
    name: Deploy DevMultienvApiStackE0D2C497
    permissions:
      contents: read
      id-token: write
    environment: Dev
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - Assets-FileAsset3
      - Assets-FileAsset4
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::719674059873:role/cdk-cosmos2-deploy-role-719674059873-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Dev-MultienvApiStack
          template: https://cdk-cosmos2-assets-719674059873-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::719674059873:role/cdk-cosmos2-cfn-exec-role-719674059873-ap-southeast-2
  Dev-MultienvStaticStack-Deploy:
    name: Deploy DevMultienvStaticStack22198C18
    permissions:
      contents: read
      id-token: write
    environment: Dev
    needs:
      - Build-Build
      - Assets-FileAsset5
      - Assets-FileAsset6
      - Assets-FileAsset7
      - Assets-FileAsset8
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::553067551417:role/cdk-cosmos2-deploy-role-553067551417-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Dev-MultienvStaticStack
          template: https://cdk-cosmos2-assets-553067551417-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset5.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::553067551417:role/cdk-cosmos2-cfn-exec-role-553067551417-ap-southeast-2
  Tst-MultienvApiStack-Deploy:
    name: Deploy TstMultienvApiStack76483C6C
    permissions:
      contents: read
      id-token: write
    environment: Tst
    needs:
      - Build-Build
      - Assets-FileAsset9
      - Assets-FileAsset2
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Dev-MultienvApiStack-Deploy
      - Dev-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::719674059873:role/cdk-cosmos2-deploy-role-719674059873-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Tst-MultienvApiStack
          template: https://cdk-cosmos2-assets-719674059873-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset9.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::719674059873:role/cdk-cosmos2-cfn-exec-role-719674059873-ap-southeast-2
  Tst-MultienvStaticStack-Deploy:
    name: Deploy TstMultienvStaticStack31004CF7
    permissions:
      contents: read
      id-token: write
    environment: Tst
    needs:
      - Build-Build
      - Assets-FileAsset10
      - Assets-FileAsset6
      - Assets-FileAsset7
      - Assets-FileAsset11
      - Dev-MultienvApiStack-Deploy
      - Dev-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::553067551417:role/cdk-cosmos2-deploy-role-553067551417-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Tst-MultienvStaticStack
          template: https://cdk-cosmos2-assets-553067551417-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset10.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::553067551417:role/cdk-cosmos2-cfn-exec-role-553067551417-ap-southeast-2
  Stub-MultienvApiStack-Deploy:
    name: Deploy StubMultienvApiStack46C29A2C
    permissions:
      contents: read
      id-token: write
    environment: Stub
    needs:
      - Build-Build
      - Assets-FileAsset12
      - Assets-FileAsset2
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Tst-MultienvApiStack-Deploy
      - Tst-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::719674059873:role/cdk-cosmos2-deploy-role-719674059873-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Stub-MultienvApiStack
          template: https://cdk-cosmos2-assets-719674059873-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset12.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::719674059873:role/cdk-cosmos2-cfn-exec-role-719674059873-ap-southeast-2
  Stub-MultienvStaticStack-Deploy:
    name: Deploy StubMultienvStaticStackCF2AB85F
    permissions:
      contents: read
      id-token: write
    environment: Stub
    needs:
      - Build-Build
      - Assets-FileAsset13
      - Assets-FileAsset6
      - Assets-FileAsset7
      - Assets-FileAsset14
      - Tst-MultienvApiStack-Deploy
      - Tst-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::553067551417:role/cdk-cosmos2-deploy-role-553067551417-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Stub-MultienvStaticStack
          template: https://cdk-cosmos2-assets-553067551417-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset13.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::553067551417:role/cdk-cosmos2-cfn-exec-role-553067551417-ap-southeast-2
  Sit-MultienvApiStack-Deploy:
    name: Deploy SitMultienvApiStackE6FBAB64
    permissions:
      contents: read
      id-token: write
    environment: Sit
    needs:
      - Build-Build
      - Assets-FileAsset15
      - Assets-FileAsset2
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Stub-MultienvApiStack-Deploy
      - Stub-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::719674059873:role/cdk-cosmos2-deploy-role-719674059873-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Sit-MultienvApiStack
          template: https://cdk-cosmos2-assets-719674059873-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset15.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::719674059873:role/cdk-cosmos2-cfn-exec-role-719674059873-ap-southeast-2
  Sit-MultienvStaticStack-Deploy:
    name: Deploy SitMultienvStaticStackB4F41628
    permissions:
      contents: read
      id-token: write
    environment: Sit
    needs:
      - Build-Build
      - Assets-FileAsset16
      - Assets-FileAsset6
      - Assets-FileAsset7
      - Assets-FileAsset17
      - Stub-MultienvApiStack-Deploy
      - Stub-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::553067551417:role/cdk-cosmos2-deploy-role-553067551417-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Sit-MultienvStaticStack
          template: https://cdk-cosmos2-assets-553067551417-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset16.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::553067551417:role/cdk-cosmos2-cfn-exec-role-553067551417-ap-southeast-2
  Perf-MultienvApiStack-Deploy:
    name: Deploy PerfMultienvApiStack748854A7
    permissions:
      contents: read
      id-token: write
    environment: Perf
    needs:
      - Build-Build
      - Assets-FileAsset18
      - Assets-FileAsset2
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Sit-MultienvApiStack-Deploy
      - Sit-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::719674059873:role/cdk-cosmos2-deploy-role-719674059873-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Perf-MultienvApiStack
          template: https://cdk-cosmos2-assets-719674059873-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset18.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::719674059873:role/cdk-cosmos2-cfn-exec-role-719674059873-ap-southeast-2
  Perf-MultienvStaticStack-Deploy:
    name: Deploy PerfMultienvStaticStack820E5706
    permissions:
      contents: read
      id-token: write
    environment: Perf
    needs:
      - Build-Build
      - Assets-FileAsset19
      - Assets-FileAsset6
      - Assets-FileAsset7
      - Assets-FileAsset20
      - Sit-MultienvApiStack-Deploy
      - Sit-MultienvStaticStack-Deploy
    runs-on:
      - self-hosted
      - vm:m5.large
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::592166867077:role/ManualOidcCdkDeployRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::553067551417:role/cdk-cosmos2-deploy-role-553067551417-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: Perf-MultienvStaticStack
          template: https://cdk-cosmos2-assets-553067551417-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset19.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::553067551417:role/cdk-cosmos2-cfn-exec-role-553067551417-ap-southeast-2
